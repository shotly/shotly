openapi: 3.1.1

info:
  title: Shotly
  description: Shotly is a modern platform for organizing your bookmarks. It helps you save, categorize, and quickly find your favorite links â€” whether for work, study, or inspiration.
  license:
    name: AGPL-3.0
    url: https://github.com/shotly/shotly/blob/main/LICENSE
  version: 0.x.x

externalDocs:
  url: https://shotly.dev/docs
  description: Shotly Documentation

servers:
  - url: https://app.shotly.dev/api
    description: Production
  - url: http://localhost:3000/api
    description: Development

paths:
  /profile/details:
    put:
      summary: Update user details
      tags:
        - Profile
      operationId: ProfileDetailsUpdate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileDetailsUpdatePayload'
      responses:
        200:
          description: Update user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDetailsUpdateResult'

  /profile/password:
    put:
      summary: Update user password
      tags:
        - Profile
      operationId: ProfilePasswordUpdate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePasswordUpdatePayload'
      responses:
        200:
          description: Update user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePasswordUpdateResult'

  /profile:
    delete:
      summary: Delete user profile
      tags:
        - Profile
      operationId: ProfileDelete
      parameters:
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileDeletePayload'
      responses:
        200:
          description: Delete user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDeleteResult'

  /api-keys:
    get:
      summary: Get api keys list
      tags:
        - Api Keys
      operationId: ApiKeysList
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        200:
          description: Get api keys list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListResult'
    post:
      summary: Create new api key
      tags:
        - Api Keys
      operationId: ApiKeysCreate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeysCreatePayload'
      responses:
        200:
          description: Create new api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateResult'

  /api-keys/{id}:
    delete:
      summary: Delete api key
      tags:
        - Api Keys
      operationId: ApiKeysDelete
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeysDeletePayload'
      responses:
        200:
          description: Delete api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysDeleteResult'

  /bookmarks:
    get:
      summary: Get bookmarks list
      tags:
        - Bookmarks
      operationId: BookmarksList
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        200:
          description: Get bookmarks list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarksListResult'
    post:
      summary: Create new bookmark
      tags:
        - Bookmarks
      operationId: BookmarksCreate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarksCreatePayload'
      responses:
        200:
          description: Create new bookmark
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarksCreateResult'

  /bookmarks/{id}:
    get:
      summary: Get bookmark by id
      tags:
        - Bookmarks
      operationId: BookmarksGet
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get bookmark by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarksGetResult'
    put:
      summary: Update bookmark
      tags:
        - Bookmarks
      operationId: BookmarksUpdate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarksUpdatePayload'
      responses:
        200:
          description: Update bookmark
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarksUpdateResult'

    delete:
      summary: Delete bookmark
      tags:
        - Bookmarks
      operationId: BookmarksDelete
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarksDeletePayload'
      responses:
        200:
          description: Delete bookmark
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarksDeleteResult'

  /collections:
    get:
      summary: Get collections list
      tags:
        - Collections
      operationId: CollectionsList
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        200:
          description: Get collections list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsListResult'
    post:
      summary: Create new collection
      tags:
        - Collections
      operationId: CollectionsCreate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsCreatePayload'
      responses:
        200:
          description: Create new collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsCreateResult'

  /collections/{id}:
    get:
      summary: Get collection by id
      tags:
        - Collections
      operationId: CollectionsGet
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get collection by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsGetResult'
    put:
      summary: Update collection
      tags:
        - Collections
      operationId: CollectionsUpdate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsUpdatePayload'
      responses:
        200:
          description: Update collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsUpdateResult'
    delete:
      summary: Delete collection
      tags:
        - Collections
      operationId: CollectionsDelete
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsDeletePayload'
      responses:
        200:
          description: Delete collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsDeleteResult'

  /collections/{id}/attach:
    post:
      summary: Attach bookmark to collection
      tags:
        - Collections
      operationId: CollectionsAttachCreate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsAttachCreatePayload'
      responses:
        200:
          description: Attach bookmark to collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsAttachCreateResult'

  /collections/{id}/detach:
    post:
      summary: Detach bookmark from collection
      tags:
        - Collections
      operationId: CollectionsDetachCreate
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsDetachCreatePayload'
      responses:
        200:
          description: Detach bookmark from collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsDetachCreateResult'

components:
  parameters:
    x-api-key:
      name: x-api-key
      in: header
      required: true
      schema:
        type: string

    page:
      name: page
      in: query
      description: Page number
      schema:
        type: string
        default: '1'

    search:
      name: search
      in: query
      description: Search query
      schema:
        type: string

    perPage:
      name: perPage
      in: query
      description: Items per page
      schema:
        type: string
        default: '10'

    sortColumn:
      name: sortColumn
      in: query
      description: Sort column
      schema:
        type: string

    sortType:
      name: sortType
      in: query
      description: Sort type
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc

  schemas:
    Pagination:
      type: object
      description: Pagination
      required:
        - total
      properties:
        total:
          type: number
          description: Total items
          default: 0

    CUID:
      type: string
      description: Id
      format: cuid
      example: cma410aol00000cjobbw006p
      maxLength: 24
      minLength: 24

    ApiKey:
      type: string
      description: Api key
      format: uuid
      example: 123e4567-e89b-12d3-a456-426614174000

    ProfileDetailsUpdatePayload:
      type: object
      description: Payload "Update user details"

    ProfileDetailsUpdateResult:
      type: object
      description: Result "Update user details"

    ProfilePasswordUpdatePayload:
      type: object
      description: Payload "Update user password"

    ProfilePasswordUpdateResult:
      type: object
      description: Result "Update user password"

    ProfileDeletePayload:
      type: object
      description: Payload "Delete user profile"

    ProfileDeleteResult:
      type: object
      description: Result "Delete user profile"

    ApiKeysListResult:
      type: object
      description: Result "Get api keys list"

    ApiKeysCreatePayload:
      type: object
      description: Payload "Create new api key"

    ApiKeysCreateResult:
      type: object
      description: Result "Create new api key"

    ApiKeysDeletePayload:
      type: object
      description: Payload "Delete api key"

    ApiKeysDeleteResult:
      type: object
      description: Result "Delete api key"

    BookmarksListResult:
      type: object
      description: Result "Get bookmarks list"

    BookmarksCreatePayload:
      type: object
      description: Payload "Create new bookmark"

    BookmarksCreateResult:
      type: object
      description: Result "Create new bookmark"

    BookmarksGetResult:
      type: object
      description: Result "Get bookmark by id"

    BookmarksUpdatePayload:
      type: object
      description: Payload "Update bookmark"

    BookmarksUpdateResult:
      type: object
      description: Result "Update bookmark"

    BookmarksDeletePayload:
      type: object
      description: Payload "Delete bookmark"

    BookmarksDeleteResult:
      type: object
      description: Result "Delete bookmark"

    CollectionsListResult:
      type: object
      description: Result "Get collections list"

    CollectionsCreatePayload:
      type: object
      description: Payload "Create new collection"

    CollectionsCreateResult:
      type: object
      description: Result "Create new collection"

    CollectionsGetResult:
      type: object
      description: Result "Get collection by id"

    CollectionsUpdatePayload:
      type: object
      description: Payload "Update collection"

    CollectionsUpdateResult:
      type: object
      description: Result "Update collection"

    CollectionsDeletePayload:
      type: object
      description: Payload "Delete collection"

    CollectionsDeleteResult:
      type: object
      description: Result "Delete collection"

    CollectionsAttachCreatePayload:
      type: object
      description: Payload "Attach bookmark to collection"

    CollectionsAttachCreateResult:
      type: object
      description: Result "Attach bookmark to collection"

    CollectionsDetachCreatePayload:
      type: object
      description: Payload "Detach bookmark from collection"

    CollectionsDetachCreateResult:
      type: object
      description: Result "Detach bookmark from collection"
