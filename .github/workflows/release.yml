name: Release

on:
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      release:
        description: 'ex: @shotly/web-v1.0.0'
        type: string
        required: true
      ref:
        description: 'branch, tag or SHA'
        type: string

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.set-package.outputs.package }}
      version: ${{ steps.set-package.outputs.version }}
    steps:
      - name: Regex matching
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.inputs.release || github.ref_name }}
          regex: '@shotly\/([a-z-]+)-(v[0-9]+.[0-9]+.[0-9]+)'

      - name: Set package in env
        id: set-package
        run: |
          APPS=("web")
          MATCH="${{ steps.regex-match.outputs.match }}"

          if [ -z "$MATCH" ]; then
            echo "package=" >> $GITHUB_OUTPUT
            echo "version=" >> $GITHUB_OUTPUT
          else
            found=false
            for app in "${APPS[@]}"; do
              if [ "$app" == "${{ steps.regex-match.outputs.group1 }}" ]; then
                found=true
                break
              fi
            done

            if $found; then
              echo "package=${{ steps.regex-match.outputs.group1 }}" >> $GITHUB_OUTPUT
              echo "version=${{ steps.regex-match.outputs.group2 }}" >> $GITHUB_OUTPUT
            else
              echo "package=" >> $GITHUB_OUTPUT
              echo "version=" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Result
        run: |
          echo "${{ steps.set-package.outputs.package }}"
          echo "${{ steps.set-package.outputs.version }}"

  build:
    needs: determine-changes
    if: ${{ needs.determine-changes.outputs.package != '' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set env
        run: |
          echo "APP_NAME=${{ needs.determine-changes.outputs.package }}" >> $GITHUB_ENV
          echo "APP_VERSION=${{ needs.determine-changes.outputs.version }}" >> $GITHUB_ENV

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/${{ env.APP_NAME }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            APP_PUBLIC_VERSION=${{ env.APP_VERSION }}
          secrets: |
            NUXT_UI_PRO_LICENSE=${{ secrets.NUXT_UI_PRO_LICENSE }}
          tags: ghcr.io/shotly/${{ env.APP_NAME }}:latest,ghcr.io/shotly/${{ env.APP_NAME }}:${{ env.APP_VERSION }}
